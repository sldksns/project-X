#include <iostream>
#include "TXLib.h"
#include <vector>
#include <string>
#include <cmath>
#include <stdlib.h>
using namespace std;
class Graph{
public:
    int x_sedk;
    int x_multk;
    int k = 400;
    int integer;
    Graph(int x_sedk, int x_multk, int integer){
        this-> x_sedk = x_sedk;
        this-> x_multk = x_multk;
        this->integer = integer;
    }
    void draw(){
        txSetFillColor(TX_BLACK);
        txSetColor(TX_BLACK, 5);
        for(int i = -k; i < k; i+= 5){
            //txCircle(i + 500 , (500-pow(i, k)), 5);
            txLine(i + k , k- x_multk*pow(i, x_sedk) + (integer*5), (i+5) + k , k-x_multk*pow(i+5, x_sedk) + (integer*5));
        }
        cout << integer << " ";
        //cout << x_k << " ";
    }
};
class Read_String{
public:
    string graph_formula;
    int x_sedk;
    int x_multk;
    int integer;
    //y = 2x^2-10
    void read(){
        cin >> graph_formula;
        stringstream n3;
        if(graph_formula.find("+") != std::string::npos){
                cout << graph_formula;
            n3 << graph_formula[graph_formula.find("+")+1];
            n3 >> integer;
        }
        else{

            n3 << graph_formula[graph_formula.find("-")+1];
            n3 >> integer;
            integer = -integer;
        }
        stringstream n1;
        stringstream n2;
        n1 <<  graph_formula[graph_formula.find("x")-1];
        n2 <<  graph_formula[graph_formula.find("x")+2];
        n1 >> x_multk;
        n2 >> x_sedk;
    }
};
class BackGround{
public:
    int x,y;
    BackGround(int x, int y){
        this->x = x;
        this->y = y;
    }
    void draw(){
        txSetFillColor(TX_WHITE);
        txSetColor(TX_WHITE);
        txRectangle(0,0,x,y);
        txSetFillColor(TX_BLACK);
        txSetColor(TX_BLACK, 3);
        /*ось обцисс*/
        txLine(0,y/2,x,y/2);
        /*ось ординат*/
        txLine(x/2,y,x/2,0);
        txSetColor(TX_BLACK, 1);
        for(int i = 0; i < 50; i++){
            txLine(i*20, 0, i*20, 1000);
            txLine(0, i*20, 1000, i*20);
        }
    }
};
class Window{
public:
    int winX = 800;
    int winY = 800;
    string str;
    Read_String read_str;
    BackGround bg = BackGround(winX, winY);
    void run(){
        txCreateWindow(winX, winY);
        read_str.read();
        Graph graph = Graph(read_str.x_sedk, read_str.x_multk, read_str.integer);
        while(true){
            txClear();
            if(GetAsyncKeyState('A')){
                graph.k -= 1;
            }
            if(GetAsyncKeyState('D')){
                graph.k += 1;
            }
            bg.draw();
            graph.draw();
            txSleep(1);
        }
    }
};
int main(){
    Window window;
    window.run();
}

